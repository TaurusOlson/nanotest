{"name":"Nanotest","body":"# NANOTEST\r\n\r\nnanotest is a simple unit testing framework for Python.\r\n\r\n\r\n# MOTIVATION\r\n\r\nI want a quick way of testing my code. Testing should be easy and fun. It\r\nshouldn't get in your way.  Actually I think it should almost be as natural as\r\ncoding your main project.\r\nThere are many frameworks so why write another one?\r\n\r\nHere are a few reasons:\r\n\r\n* [unittest](http://docs.python.org/library/unittest.html) is great but I find\r\n  it long to setup. Most of the time, its rigidity frustrates me and I end up\r\n  skipping the testing phase!\r\n\r\n* I want to have fun with tests in Python and have fun creating my own unit\r\n  testing framework.\r\n\r\n\r\n# USAGE\r\n\r\n    from nanotest import test\r\n\r\n## Test (in)equality\r\n\r\n    test(42).eq(40 + 2)\r\n    # 42 should be equal to 42... OK\r\n\r\n    test(42).ne(40 + 2)\r\n    # 42 should not be equal to 42... NOK\r\n\r\n\r\n## Test superiority\r\n\r\n    test(42).gt(41)\r\n    # 42 should be greater than 41... OK\r\n\r\n    test(42).ge(41)\r\n    # 42 should be greater or equal to 41... OK\r\n\r\n\r\n## Test inferiority\r\n\r\n    test(42).lt(43)\r\n    # 42 should be lower than 43... OK\r\n\r\n    test(42).le(43)\r\n    # 42 should be lower or equal to 43... OK\r\n\r\n\r\n## Logical tests \r\n\r\n    test(True).is_(True)\r\n    # True should be True... OK\r\n\r\n    test(True).is_not(True)\r\n    # True should not be True... NOK\r\n\r\n\r\n## Test inclusion\r\n\r\n    test(\"Spam, spam, spam and egg\").contains(\"spam\")\r\n    # 'Spam, spam, spam and egg' should contain 'spam'... OK\r\n\r\n    test(\"Spam, spam, spam and egg\").contains_no(\"bacon\")\r\n    # 'Spam, spam, spam and egg' should not contain 'bacon'... OK\r\n\r\n\r\n# THE NAME\r\n\r\nI wanted a tiny testing framework. I like physics so nano sounds good. Hence nanotest ;)\r\n\r\n\r\n","tagline":"nanotest is a simple unit testing framework","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}